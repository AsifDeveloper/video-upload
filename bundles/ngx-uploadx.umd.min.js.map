{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-uploadx/lib/error-handler.ts","ng://ngx-uploadx/lib/store.ts","ng://ngx-uploadx/lib/utils.ts","ng://ngx-uploadx/lib/uploader.ts","ng://ngx-uploadx/lib/tus.ts","ng://ngx-uploadx/lib/uploaderx.ts","ng://ngx-uploadx/lib/uploadx.service.ts","ng://ngx-uploadx/lib/uploadx.directive.ts","ng://ngx-uploadx/lib/uploadx-drop.directive.ts","ng://ngx-uploadx/lib/uploadx.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","ErrorType","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__read","ar","error","ErrorHandler","min","max","factor","attempts","code","delay","kind","maxAttempts","FatalError","reset","authErrorCodes","includes","Auth","shouldRestartCodes","Restart","shouldRetryCodes","Retryable","wait","_this","Math","setTimeout","floor","random","Store","prefix","set","localStorage","setItem","get","getItem","delete","removeItem","store","window","Map","safeMatch","base","re","match","resolveUrl","url","indexOf","unfunc","ref","Function","noop","pick","obj","whitelist","forEach","isNumber","x","Number","createHash","str","hash","len","charCodeAt","b64","encode","btoa","encodeURIComponent","replace","p1","String","fromCharCode","parseInt","decode","decodeURIComponent","atob","split","map","toString","slice","join","serialize","entries","_a","_b","parse","encoded","kvPairs","kv","decoded","kvPairs_1","tslib_1.__values","kvPairs_1_1","DynamicChunk","scale","throughput","elapsedTime","size","minChunkTime","maxSize","maxChunkTime","minSize","MAX_SAFE_INTEGER","actionToStatusMap","pause","upload","cancel","uploadAll","pauseAll","cancelAll","Uploader","file","options","headers","endpoint","errorHandler","offset","responseType","_url","cleanup","uploadId","name","metadata","mimeType","type","lastModified","print","JSON","stringify","stateChange","chunkSize","configure","_status","abort","onCancel","_c","token","action","status","getToken","_d","undefined","startTime","Date","getTime","getFileUrl","start","responseStatus","sendFileContent","getOffset","Error","errType","progress","remaining","request","method","xhr","_xhr","XMLHttpRequest","open","Blob","onprogress","onProgress","response","withCredentials","_headers","keys","setRequestHeader","onload","evt","getResponseBody","onerror","send","setAuth","Authorization","getValueFromResponse","getResponseHeader","getChunk","end","responseText","throttle","loaded","now","uploaded","speed","round","toFixed","ceil","Tus","_super","Tus-Resumable","tslib_1.__extends","encodedMetaData","Upload-Length","Upload-Metadata","location","Content-Type","Upload-Offset","getOffsetFromResponse","offsetStr","UploaderX","X-Upload-Content-Length","X-Upload-Content-Type","Content-Range","range","getRangeEnd","UploadxService","ngZone","queue","autoUpload","concurrency","run","eventsStream","UploadxService_1","stateKeys","Subject","subs","fromEvent","subscribe","control","events","runOutsideAngular","processQueue","asObservable","init","connect","pipe","startWith","disconnect","uploader","ngOnDestroy","sub","unsubscribe","handleFileList","fileList","instanceOptions","from","addUploaderInstance","autoUploadFiles","handleFile","filter","runningProcess","uploaderClass","navigator","onLine","NgZone","Injectable","providedIn","UploadxDirective","elementRef","renderer","uploadService","uploadxState","EventEmitter","ctrlEvent","ngOnInit","uploadx","multiple","allowedTypes","setAttribute","nativeElement","emit","fileListener","files","item","ElementRef","Renderer2","tslib_1.__decorate","Output","Input","HostListener","Directive","selector","UploadxDropDirective","active","dropHandler","event","dataTransfer","stopPropagation","preventDefault","fileInput","onDragOver","dropEffect","onDragLeave","HostBinding","ContentChild","UploadxModule","NgModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @internal\n */\nexport enum ErrorType {\n  Restart,\n  Auth,\n  Retryable,\n  FatalError\n}\nexport class ErrorHandler {\n  static maxAttempts = 8;\n  static shouldRestartCodes = [404, 410];\n  static authErrorCodes = [401];\n  static shouldRetryCodes = [423, 429];\n  min = 500;\n  max = this.min * 120;\n  factor = 2;\n  attempts = 1;\n  private delay: number;\n  private code? = -1;\n\n  constructor() {\n    this.delay = this.min;\n  }\n\n  kind(code: number): ErrorType {\n    if (code === this.code) {\n      this.attempts++;\n      if (this.attempts > ErrorHandler.maxAttempts) {\n        return ErrorType.FatalError;\n      }\n    } else {\n      this.reset();\n    }\n    this.code = code;\n\n    if (ErrorHandler.authErrorCodes.includes(code)) {\n      return ErrorType.Auth;\n    }\n    if (ErrorHandler.shouldRestartCodes.includes(code)) {\n      return ErrorType.Restart;\n    }\n    if (code < 400 || code >= 500 || ErrorHandler.shouldRetryCodes.includes(code)) {\n      return ErrorType.Retryable;\n    }\n    return ErrorType.FatalError;\n  }\n\n  wait(): Promise<number> {\n    return new Promise(resolve => {\n      this.delay = Math.min(this.delay * this.factor, this.max);\n      setTimeout(() => resolve(this.attempts), this.delay + Math.floor(Math.random() * this.min));\n    });\n  }\n\n  reset(): void {\n    this.delay = this.min;\n    this.attempts = 1;\n    this.code = -1;\n  }\n}\n","class Store {\n  constructor(public prefix = 'UPLOADX-V3.0-') {}\n  set(key: string, value: string) {\n    localStorage.setItem(this.prefix + key, value);\n  }\n  get(key: string): string | null | false {\n    return localStorage.getItem(this.prefix + key);\n  }\n  delete(key: string) {\n    localStorage.removeItem(this.prefix + key);\n  }\n}\nexport const store = 'localStorage' in window ? new Store() : new Map<string, string>();\n","// tslint:disable: no-bitwise\n\nfunction safeMatch(base: string, re: RegExp) {\n  return (base.match(re) || [])[0] || '';\n}\nexport function resolveUrl(url: string, base: string): string {\n  if (url.indexOf('https://') * url.indexOf('http://') === 0) {\n    return url;\n  }\n  if (url.indexOf('//') === 0) {\n    return safeMatch(base, /^(https?:)/) + url;\n  }\n  if (url.indexOf('/') === 0) {\n    return safeMatch(base, /^(?:https?:)?(?:\\/\\/)?([^\\/\\?]+)/) + url;\n  }\n  return safeMatch(base, /^(?:https?:)?(?:\\/\\/)?([^\\/\\?]+)?(.*\\/)/) + url;\n}\n\nexport function unfunc<T, V>(value: T | ((ref: V) => T), ref: V): T {\n  return value instanceof Function ? value(ref) : value;\n}\n\nexport const noop = () => {};\n\nexport const pick = <T, K extends keyof T>(obj: T, whitelist: K[]): Pick<T, K> => {\n  const result: any = {};\n  whitelist.forEach(key => (result[key] = obj[key]));\n  return result;\n};\n\nexport function isNumber(x: unknown): x is number {\n  return x === Number(x);\n}\n\nexport function isString(x: unknown): x is string {\n  return typeof x === 'string';\n}\n\n/**\n * 32-bit FNV-1a hash function\n */\nexport function createHash(str: string): number {\n  let hash = 2166136261;\n  const len = str.length;\n  for (let i = 0; i < len; i++) {\n    hash ^= str.charCodeAt(i);\n    hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n  }\n  return hash >>> 0;\n}\nexport const b64 = {\n  encode: (str: string) =>\n    btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) =>\n        String.fromCharCode(Number.parseInt(p1, 16))\n      )\n    ),\n  decode: (str: string) =>\n    decodeURIComponent(\n      atob(str)\n        .split('')\n        .map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))\n        .join('')\n    ),\n  serialize: (obj: Record<string, any>) => {\n    return Object.entries(obj)\n      .map(([key, value]) => `${key} ${b64.encode(String(value))}`)\n      .toString();\n  },\n  parse: (encoded: string) => {\n    const kvPairs = encoded.split(',').map(kv => kv.split(' '));\n    const decoded = Object.create(null);\n    for (const [key, value] of kvPairs) {\n      decoded[key] = b64.decode(value);\n    }\n    return decoded;\n  }\n};\n\n/**\n * Adaptive chunk size\n */\nexport class DynamicChunk {\n  /** Maximum chunk size in bytes */\n  static maxSize = Number.MAX_SAFE_INTEGER;\n  /** Minimum chunk size in bytes */\n  static minSize = 1024 * 256;\n  /** Initial chunk size in bytes */\n  static size = 4096 * 256;\n  static minChunkTime = 2;\n  static maxChunkTime = 8;\n\n  static scale(throughput: number) {\n    const elapsedTime = DynamicChunk.size / throughput;\n    if (elapsedTime < DynamicChunk.minChunkTime) {\n      DynamicChunk.size = Math.min(DynamicChunk.maxSize, DynamicChunk.size * 2);\n    }\n    if (elapsedTime > DynamicChunk.maxChunkTime) {\n      DynamicChunk.size = Math.max(DynamicChunk.minSize, DynamicChunk.size / 2);\n    }\n    return DynamicChunk.size;\n  }\n}\n","import { ErrorHandler, ErrorType } from './error-handler';\nimport {\n  UploadAction,\n  UploaderOptions,\n  UploadState,\n  UploadStatus,\n  UploadxControlEvent\n} from './interfaces';\nimport { store } from './store';\nimport { createHash, DynamicChunk, isNumber, noop, unfunc } from './utils';\n\nconst actionToStatusMap: { [K in UploadAction]: UploadStatus } = {\n  pause: 'paused',\n  upload: 'queue',\n  cancel: 'cancelled',\n  uploadAll: 'queue',\n  pauseAll: 'paused',\n  cancelAll: 'cancelled'\n};\ninterface RequestParams {\n  method: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH' | 'HEAD' | 'OPTIONS';\n  body?: BodyInit | null;\n  url?: string;\n  headers?: Record<string, string>;\n  progress?: boolean;\n}\n\n/**\n * Uploader Base Class\n */\nexport abstract class Uploader implements UploadState {\n  set status(s: UploadStatus) {\n    if (this._status === 'cancelled' || (this._status === 'complete' && s !== 'cancelled')) {\n      return;\n    }\n    if (s !== this._status) {\n      s === 'paused' && this.abort();\n      this._status = s;\n      ['cancelled', 'complete', 'error'].includes(s) && this.cleanup();\n      s === 'cancelled' ? this.onCancel() : this.stateChange(this);\n    }\n  }\n  get status() {\n    return this._status;\n  }\n  get url(): string {\n    return this._url || store.get(this.uploadId) || '';\n  }\n  set url(value: string) {\n    this._url !== value && store.set(this.uploadId, value);\n    this._url = value;\n  }\n  readonly name: string;\n  readonly size: number;\n  readonly uploadId: string;\n  response: any;\n  responseStatus: number;\n  progress: number;\n  remaining: number;\n  speed: number;\n  /** Custom headers */\n  headers: Record<string, any> = {};\n  /** Metadata Object */\n  metadata: Record<string, any>;\n  /** Upload endpoint */\n  endpoint = '/upload';\n  /** Chunk size in bytes */\n  chunkSize: number;\n  /** Auth token/tokenGetter */\n  token: UploadxControlEvent['token'];\n  /** Retries handler */\n  protected errorHandler = new ErrorHandler();\n  /** Active HttpRequest */\n  protected _xhr: XMLHttpRequest;\n  /** byte offset within the whole file */\n  protected offset? = 0;\n  /** Set HttpRequest responseType */\n  protected responseType: XMLHttpRequestResponseType = '';\n  private _url = '';\n  private _status: UploadStatus;\n  private startTime: number;\n  private stateChange: (evt: UploadState) => void;\n\n  constructor(readonly file: File, readonly options: UploaderOptions) {\n    this.name = file.name;\n    this.size = file.size;\n    this.metadata = {\n      name: file.name,\n      mimeType: file.type || 'application/octet-stream',\n      size: file.size,\n      lastModified: file.lastModified\n    };\n    const print = JSON.stringify({\n      ...this.metadata,\n      type: this.constructor.name,\n      endpoint: options.endpoint\n    });\n    this.uploadId = createHash(print).toString(16);\n    this.stateChange = options.stateChange || noop;\n    this.chunkSize = options.chunkSize || this.size;\n    this.configure(options);\n  }\n\n  /**\n   * Configure uploader\n   */\n  configure({ metadata = {}, headers = {}, token, endpoint, action }: UploadxControlEvent): void {\n    this.endpoint = endpoint || this.endpoint;\n    this.token = token || this.token;\n    this.metadata = { ...this.metadata, ...unfunc(metadata, this.file) };\n    this.headers = { ...this.headers, ...unfunc(headers, this.file) };\n    action && (this.status = actionToStatusMap[action]);\n  }\n\n  /**\n   * Starts uploading\n   */\n  async upload(): Promise<void> {\n    this.status = 'uploading';\n    try {\n      await this.getToken();\n      this.offset = undefined;\n      this.startTime = new Date().getTime();\n      this.url = this.url || (await this.getFileUrl());\n      this.errorHandler.reset();\n      this.start();\n    } catch {\n      if (this.errorHandler.kind(this.responseStatus) !== ErrorType.FatalError) {\n        this.status = 'retry';\n        await this.errorHandler.wait();\n        this.status = 'queue';\n      } else {\n        this.status = 'error';\n      }\n    }\n  }\n\n  /**\n   * Starts chunk upload\n   */\n  async start() {\n    while (this.status === 'uploading' || this.status === 'retry') {\n      if (this.offset !== this.size) {\n        try {\n          const offset = isNumber(this.offset)\n            ? await this.sendFileContent()\n            : await this.getOffset();\n          if (offset === this.offset) {\n            throw new Error('Content upload failed');\n          }\n          this.errorHandler.reset();\n          this.offset = offset;\n        } catch {\n          const errType = this.errorHandler.kind(this.responseStatus);\n          if (this.responseStatus === 413) {\n            DynamicChunk.maxSize = this.chunkSize /= 2;\n          } else if (errType === ErrorType.FatalError) {\n            this.status = 'error';\n          } else if (errType === ErrorType.Restart) {\n            this.url = '';\n            this.status = 'queue';\n          } else if (errType === ErrorType.Auth) {\n            await this.getToken();\n          } else {\n            this.status = 'retry';\n            await this.errorHandler.wait();\n            this.offset = this.responseStatus >= 400 ? undefined : this.offset;\n            this.status = 'uploading';\n          }\n        }\n      } else {\n        this.progress = 100;\n        this.remaining = 0;\n        this.status = 'complete';\n      }\n    }\n  }\n\n  /**\n   * Performs http requests\n   */\n  request({\n    method = 'GET',\n    body = null,\n    url,\n    headers = {},\n    progress\n  }: RequestParams): Promise<ProgressEvent> {\n    return new Promise((resolve, reject) => {\n      const xhr = (this._xhr = new XMLHttpRequest());\n      xhr.open(method, url || this.url, true);\n      if (body instanceof Blob || (body && progress)) {\n        xhr.upload.onprogress = this.onProgress();\n      }\n      this.responseStatus = 0;\n      this.response = undefined;\n      this.responseType && (xhr.responseType = this.responseType);\n      this.options.withCredentials && (xhr.withCredentials = true);\n      const _headers = { ...this.headers, ...headers };\n      Object.keys(_headers).forEach(key => xhr.setRequestHeader(key, _headers[key]));\n      xhr.onload = (evt: ProgressEvent) => {\n        this.responseStatus = xhr.status;\n        this.response = this.responseStatus !== 204 ? this.getResponseBody(xhr) : '';\n        this.responseStatus >= 400 ? reject(evt) : resolve(evt);\n      };\n      xhr.onerror = reject;\n      xhr.send(body);\n    });\n  }\n\n  /**\n   * Get file URI\n   */\n  protected abstract getFileUrl(): Promise<string>;\n\n  /**\n   * Send file content and return an offset for the next request\n   */\n  protected abstract sendFileContent(): Promise<number | undefined>;\n\n  /**\n   * Get an offset for the next request\n   */\n  protected abstract getOffset(): Promise<number | undefined>;\n\n  protected setAuth(token: string) {\n    this.headers.Authorization = `Bearer ${token}`;\n  }\n\n  protected abort(): void {\n    this.offset = undefined;\n    this._xhr && this._xhr.abort();\n  }\n\n  protected onCancel(): void {\n    this.abort();\n    const stateChange = () => this.stateChange(this);\n    if (this.url) {\n      this.request({ method: 'DELETE' }).then(stateChange, stateChange);\n    } else {\n      stateChange();\n    }\n  }\n\n  /**\n   * Gets the value from the response\n   */\n  protected getValueFromResponse(key: string): string | null {\n    return this._xhr.getResponseHeader(key);\n  }\n\n  /**\n   * Set auth token\n   */\n  protected getToken(): Promise<any> {\n    return Promise.resolve(unfunc(this.token || '', this.responseStatus)).then(\n      token => token && this.setAuth(token)\n    );\n  }\n\n  protected getChunk() {\n    this.chunkSize = isNumber(this.options.chunkSize) ? this.chunkSize : DynamicChunk.size;\n    const start = this.offset || 0;\n    const end = Math.min(start + this.chunkSize, this.size);\n    const body = this.file.slice(this.offset, end);\n    return { start, end, body };\n  }\n  private cleanup = () => store.delete(this.uploadId);\n\n  private getResponseBody(xhr: XMLHttpRequest): any {\n    let body = 'response' in (xhr as any) ? xhr.response : xhr.responseText;\n    if (body && this.responseType === 'json' && typeof body === 'string') {\n      try {\n        body = JSON.parse(body);\n      } catch {}\n    }\n    return body;\n  }\n\n  private onProgress(): (evt: ProgressEvent) => void {\n    let throttle = 0;\n    return ({ loaded }: ProgressEvent) => {\n      const now = new Date().getTime();\n      const uploaded = (this.offset as number) + loaded;\n      const elapsedTime = (now - this.startTime) / 1000;\n      this.speed = Math.round(uploaded / elapsedTime);\n      DynamicChunk.scale(this.speed);\n      if (!throttle) {\n        throttle = window.setTimeout(() => (throttle = 0), 500);\n        this.progress = +((uploaded / this.size) * 100).toFixed(2);\n        this.remaining = Math.ceil((this.size - uploaded) / this.speed);\n        this.stateChange(this);\n      }\n    };\n  }\n}\n","import { Uploader } from './uploader';\nimport { b64, resolveUrl } from './utils';\n\n/**\n * Implements tus resumable upload protocol\n * @see\n * https://github.com/tus/tus-resumable-upload-protocol/blob/master/protocol.md\n */\nexport class Tus extends Uploader {\n  headers = { 'Tus-Resumable': '1.0.0' };\n\n  async getFileUrl(): Promise<string> {\n    const encodedMetaData = b64.serialize(this.metadata);\n    const headers = {\n      'Upload-Length': `${this.size}`,\n      'Upload-Metadata': `${encodedMetaData}`\n    };\n    await this.request({ method: 'POST', url: this.endpoint, headers });\n    const location = this.getValueFromResponse('location');\n    if (!location) {\n      throw new Error('Invalid or missing Location header');\n    }\n    this.offset = this.responseStatus === 201 ? 0 : undefined;\n    return resolveUrl(location, this.endpoint);\n  }\n\n  async sendFileContent(): Promise<number | undefined> {\n    const { body } = this.getChunk();\n    const headers = {\n      'Content-Type': 'application/offset+octet-stream',\n      'Upload-Offset': `${this.offset}`\n    };\n    await this.request({ method: 'PATCH', body, headers });\n    return this.getOffsetFromResponse();\n  }\n\n  async getOffset(): Promise<number | undefined> {\n    await this.request({ method: 'HEAD' });\n    return this.getOffsetFromResponse();\n  }\n\n  protected getOffsetFromResponse(): number | undefined {\n    const offsetStr = this.getValueFromResponse('Upload-Offset');\n    return offsetStr ? parseInt(offsetStr, 10) : undefined;\n  }\n}\n","import { Uploader } from './uploader';\nimport { resolveUrl } from './utils';\n\n/**\n * Implements XHR/CORS Resumable Upload\n * @see\n * https://developers.google.com/drive/api/v3/manage-uploads#resumable\n */\nexport class UploaderX extends Uploader {\n  responseType = 'json' as XMLHttpRequestResponseType;\n  async getFileUrl(): Promise<string> {\n    const headers = {\n      'Content-Type': 'application/json; charset=utf-8',\n      'X-Upload-Content-Length': this.size.toString(),\n      'X-Upload-Content-Type': this.file.type || 'application/octet-stream'\n    };\n    await this.request({\n      method: 'POST',\n      body: JSON.stringify(this.metadata),\n      url: this.endpoint,\n      headers\n    });\n    const location = this.getValueFromResponse('location');\n    if (!location) {\n      throw new Error('Invalid or missing Location header');\n    }\n    this.offset = this.responseStatus === 201 ? 0 : undefined;\n    return resolveUrl(location, this.endpoint);\n  }\n\n  async sendFileContent(): Promise<number | undefined> {\n    const { end, body } = this.getChunk();\n    const headers = {\n      'Content-Type': 'application/octet-stream',\n      'Content-Range': `bytes ${this.offset}-${end - 1}/${this.size}`\n    };\n    await this.request({ method: 'PUT', body, headers });\n    return this.getOffsetFromResponse();\n  }\n\n  async getOffset(): Promise<number | undefined> {\n    const headers = {\n      'Content-Type': 'application/octet-stream',\n      'Content-Range': `bytes */${this.size}`\n    };\n    await this.request({ method: 'PUT', headers });\n    return this.getOffsetFromResponse();\n  }\n\n  protected getOffsetFromResponse(): number | undefined {\n    if (this.responseStatus > 201) {\n      const range = this.getValueFromResponse('Range');\n      return range ? getRangeEnd(range) + 1 : undefined;\n    }\n    if (this.responseStatus <= 201) {\n      return this.size;\n    }\n  }\n}\n\nexport function getRangeEnd(range = ''): number {\n  const end = +range.split(/0-/)[1];\n  return end >= 0 ? end : -1;\n}\n","import { Injectable, NgZone, OnDestroy } from '@angular/core';\nimport { fromEvent, Observable, Subject, Subscription } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { UploaderOptions, UploadState, UploadxControlEvent, UploadxOptions } from './interfaces';\nimport { Uploader } from './uploader';\nimport { UploaderX } from './uploaderx';\nimport { pick } from './utils';\n\ninterface DefaultOptions {\n  endpoint: string;\n  autoUpload: boolean;\n  concurrency: number;\n  stateChange: (evt: Uploader) => void;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class UploadxService implements OnDestroy {\n  static stateKeys: Array<keyof UploadState> = [\n    'file',\n    'name',\n    'progress',\n    'remaining',\n    'response',\n    'responseStatus',\n    'size',\n    'speed',\n    'status',\n    'uploadId',\n    'url'\n  ];\n  /** Upload status events */\n  get events() {\n    return this.eventsStream.asObservable();\n  }\n  /** Upload Queue */\n  queue: Uploader[] = [];\n  options: UploadxOptions & DefaultOptions = {\n    endpoint: '/upload',\n    autoUpload: true,\n    concurrency: 2,\n    stateChange: (evt: Uploader) => {\n      setTimeout(() =>\n        this.ngZone.run(() => this.eventsStream.next(pick(evt, UploadxService.stateKeys)))\n      );\n    }\n  };\n\n  private readonly eventsStream: Subject<UploadState> = new Subject();\n  private subs: Subscription[] = [];\n  constructor(private ngZone: NgZone) {\n    this.subs.push(\n      fromEvent(window, 'online').subscribe(() => this.control({ action: 'upload' })),\n      fromEvent(window, 'offline').subscribe(() => this.control({ action: 'pause' })),\n      this.events.subscribe(({ status }) => {\n        if (status !== 'uploading' && status !== 'added') {\n          this.ngZone.runOutsideAngular(() => this.processQueue());\n        }\n      })\n    );\n  }\n\n  /**\n   * Initializes service\n   * @param options global module options\n   * @returns Observable that emits a new value on progress or status changes\n   */\n  init(options: UploadxOptions = {}): Observable<UploadState> {\n    Object.assign(this.options, options);\n    return this.events;\n  }\n\n  /**\n   * Initializes service\n   * @param options global module options\n   * @returns Observable that emits the current array of uploaders\n   */\n  connect(options?: UploadxOptions): Observable<Uploader[]> {\n    return this.init(options).pipe(\n      startWith(0),\n      map(() => this.queue)\n    );\n  }\n\n  /**\n   * Terminates all uploads and clears the queue\n   */\n  disconnect(): void {\n    this.queue.forEach(uploader => (uploader.status = 'paused'));\n    this.queue = [];\n  }\n\n  ngOnDestroy(): void {\n    this.disconnect();\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n  /**\n   * Create Uploader and add to the queue\n   */\n  handleFileList(fileList: FileList, options = {} as UploadxOptions): void {\n    const instanceOptions = { ...this.options, ...options };\n    this.options.concurrency = instanceOptions.concurrency;\n    Array.from(fileList).forEach(file => this.addUploaderInstance(file, instanceOptions));\n    this.autoUploadFiles();\n  }\n\n  /**\n   * Create Uploader for the file and add to the queue\n   */\n  handleFile(file: File, options = {} as UploadxOptions): void {\n    const instanceOptions = { ...this.options, ...options };\n    this.addUploaderInstance(file, instanceOptions);\n    this.autoUploadFiles();\n  }\n\n  /**\n   * Upload control\n   * @example\n   * // pause all\n   * this.uploadService.control({ action: 'pause' });\n   * // pause upload with uploadId\n   * this.uploadService.control({ action: 'pause', uploadId});\n   * // set token\n   * this.uploadService.control({ token: `TOKEN` });\n   */\n  control(evt: UploadxControlEvent): void {\n    const target = evt.uploadId\n      ? this.queue.filter(({ uploadId }) => uploadId === evt.uploadId)\n      : this.queue;\n    target.forEach(uploader => uploader.configure(evt));\n  }\n\n  /**\n   * Returns number of active uploads\n   */\n  runningProcess(): number {\n    return this.queue.filter(({ status }) => status === 'uploading' || status === 'retry').length;\n  }\n\n  private addUploaderInstance(file: File, options: UploadxOptions): void {\n    const uploader = new (options.uploaderClass || UploaderX)(file, options as UploaderOptions);\n    this.queue.push(uploader);\n    uploader.status = 'added';\n  }\n\n  private autoUploadFiles(): void {\n    if (this.options.autoUpload && window.navigator.onLine) {\n      this.queue\n        .filter(({ status }) => status === 'added')\n        .forEach(uploader => (uploader.status = 'queue'));\n    }\n  }\n\n  private processQueue(): void {\n    this.queue = this.queue.filter(({ status }) => status !== 'cancelled');\n\n    this.queue\n      .filter(({ status }) => status === 'queue')\n      .slice(0, Math.max(this.options.concurrency - this.runningProcess(), 0))\n      .forEach(uploader => uploader.upload());\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  Renderer2\n} from '@angular/core';\nimport { UploadxControlEvent, UploadxOptions } from './interfaces';\nimport { UploadxService } from './uploadx.service';\n\n@Directive({ selector: '[uploadx]' })\nexport class UploadxDirective implements OnInit {\n  @Output()\n  uploadxState = new EventEmitter();\n  @Input()\n  uploadx: UploadxOptions;\n  @Input()\n  set uploadxAction(ctrlEvent: UploadxControlEvent) {\n    if (ctrlEvent && this.uploadService) {\n      this.uploadService.control(ctrlEvent);\n    }\n  }\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private uploadService: UploadxService\n  ) {}\n\n  ngOnInit() {\n    const { multiple, allowedTypes } = this.uploadx;\n\n    multiple !== false && this.renderer.setAttribute(this.elementRef.nativeElement, 'multiple', '');\n\n    allowedTypes &&\n      this.renderer.setAttribute(this.elementRef.nativeElement, 'accept', allowedTypes);\n\n    this.uploadxState.emit(this.uploadService.events);\n  }\n\n  @HostListener('change', ['$event.target.files'])\n  fileListener(files: FileList) {\n    if (files && files.item(0)) {\n      this.uploadService.handleFileList(files, this.uploadx);\n    }\n  }\n}\n","import { ContentChild, Directive, HostBinding, HostListener } from '@angular/core';\nimport { UploadxDirective } from './uploadx.directive';\nimport { UploadxService } from './uploadx.service';\n\n@Directive({ selector: '[uploadxDrop]' })\nexport class UploadxDropDirective {\n  @HostBinding('class.uploadx-drop-active')\n  active = false;\n\n  @ContentChild(UploadxDirective)\n  fileInput: UploadxDirective;\n  constructor(private uploadService: UploadxService) {}\n\n  @HostListener('drop', ['$event'])\n  dropHandler(event: DragEvent) {\n    if (event.dataTransfer && event.dataTransfer.files) {\n      event.stopPropagation();\n      event.preventDefault();\n      this.active = false;\n      if (event.dataTransfer.files.item(0)) {\n        this.uploadService.handleFileList(event.dataTransfer.files, this.fileInput.uploadx);\n      }\n    }\n  }\n\n  @HostListener('dragover', ['$event'])\n  onDragOver(event: DragEvent) {\n    if (event.dataTransfer && event.dataTransfer.files) {\n      event.dataTransfer.dropEffect = 'copy';\n      event.stopPropagation();\n      event.preventDefault();\n      this.active = true;\n    }\n  }\n\n  @HostListener('dragleave', ['$event'])\n  onDragLeave(event: DragEvent) {\n    this.active = false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { UploadxDropDirective } from './uploadx-drop.directive';\nimport { UploadxDirective } from './uploadx.directive';\n\n@NgModule({\n  declarations: [UploadxDirective, UploadxDropDirective],\n  exports: [UploadxDirective, UploadxDropDirective]\n})\nexport class UploadxModule {}\n"]}